
GccApplication2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000018c  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000001e0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000001e0  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000210  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000038  00000000  00000000  0000024c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000874  00000000  00000000  00000284  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000613  00000000  00000000  00000af8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000403  00000000  00000000  0000110b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000064  00000000  00000000  00001510  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000372  00000000  00000000  00001574  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000038a  00000000  00000000  000018e6  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000040  00000000  00000000  00001c70  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 c2 00 	call	0x184	; 0x184 <main>
  64:	0c 94 c4 00 	jmp	0x188	; 0x188 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <getkey>:
			_delay_ms(5);
			PORTD = 4;
		}
		if (!(PIND & (1<<PA3))){
			_delay_ms(5);
			PORTD = 8;
  6c:	cf 93       	push	r28
  6e:	df 93       	push	r29
  70:	00 d0       	rcall	.+0      	; 0x72 <getkey+0x6>
  72:	00 d0       	rcall	.+0      	; 0x74 <getkey+0x8>
  74:	cd b7       	in	r28, 0x3d	; 61
  76:	de b7       	in	r29, 0x3e	; 62
  78:	19 82       	std	Y+1, r1	; 0x01
  7a:	1a 82       	std	Y+2, r1	; 0x02
  7c:	1b 82       	std	Y+3, r1	; 0x03
  7e:	1c 82       	std	Y+4, r1	; 0x04
  80:	99 b3       	in	r25, 0x19	; 25
  82:	e7 e8       	ldi	r30, 0x87	; 135
  84:	f3 e1       	ldi	r31, 0x13	; 19
  86:	31 97       	sbiw	r30, 0x01	; 1
  88:	f1 f7       	brne	.-4      	; 0x86 <getkey+0x1a>
  8a:	00 c0       	rjmp	.+0      	; 0x8c <getkey+0x20>
  8c:	00 00       	nop
  8e:	89 b3       	in	r24, 0x19	; 25
  90:	98 17       	cp	r25, r24
  92:	b9 f1       	breq	.+110    	; 0x102 <getkey+0x96>
  94:	80 e0       	ldi	r24, 0x00	; 0
  96:	5f c0       	rjmp	.+190    	; 0x156 <getkey+0xea>
  98:	e2 2f       	mov	r30, r18
  9a:	f0 e0       	ldi	r31, 0x00	; 0
  9c:	81 e0       	ldi	r24, 0x01	; 1
  9e:	90 e0       	ldi	r25, 0x00	; 0
  a0:	02 2e       	mov	r0, r18
  a2:	02 c0       	rjmp	.+4      	; 0xa8 <getkey+0x3c>
  a4:	88 0f       	add	r24, r24
  a6:	99 1f       	adc	r25, r25
  a8:	0a 94       	dec	r0
  aa:	e2 f7       	brpl	.-8      	; 0xa4 <getkey+0x38>
  ac:	80 95       	com	r24
  ae:	8b bb       	out	0x1b, r24	; 27
  b0:	83 ef       	ldi	r24, 0xF3	; 243
  b2:	91 e0       	ldi	r25, 0x01	; 1
  b4:	01 97       	sbiw	r24, 0x01	; 1
  b6:	f1 f7       	brne	.-4      	; 0xb4 <getkey+0x48>
  b8:	00 c0       	rjmp	.+0      	; 0xba <getkey+0x4e>
  ba:	00 00       	nop
  bc:	89 b3       	in	r24, 0x19	; 25
  be:	8f 70       	andi	r24, 0x0F	; 15
  c0:	8d 30       	cpi	r24, 0x0D	; 13
  c2:	61 f0       	breq	.+24     	; 0xdc <getkey+0x70>
  c4:	28 f4       	brcc	.+10     	; 0xd0 <getkey+0x64>
  c6:	87 30       	cpi	r24, 0x07	; 7
  c8:	69 f0       	breq	.+26     	; 0xe4 <getkey+0x78>
  ca:	8b 30       	cpi	r24, 0x0B	; 11
  cc:	49 f0       	breq	.+18     	; 0xe0 <getkey+0x74>
  ce:	0c c0       	rjmp	.+24     	; 0xe8 <getkey+0x7c>
  d0:	8e 30       	cpi	r24, 0x0E	; 14
  d2:	61 f0       	breq	.+24     	; 0xec <getkey+0x80>
  d4:	8f 30       	cpi	r24, 0x0F	; 15
  d6:	41 f4       	brne	.+16     	; 0xe8 <getkey+0x7c>
  d8:	80 e0       	ldi	r24, 0x00	; 0
  da:	09 c0       	rjmp	.+18     	; 0xee <getkey+0x82>
  dc:	82 e0       	ldi	r24, 0x02	; 2
  de:	07 c0       	rjmp	.+14     	; 0xee <getkey+0x82>
  e0:	83 e0       	ldi	r24, 0x03	; 3
  e2:	05 c0       	rjmp	.+10     	; 0xee <getkey+0x82>
  e4:	84 e0       	ldi	r24, 0x04	; 4
  e6:	03 c0       	rjmp	.+6      	; 0xee <getkey+0x82>
  e8:	85 e0       	ldi	r24, 0x05	; 5
  ea:	01 c0       	rjmp	.+2      	; 0xee <getkey+0x82>
  ec:	81 e0       	ldi	r24, 0x01	; 1
  ee:	34 97       	sbiw	r30, 0x04	; 4
  f0:	41 e0       	ldi	r20, 0x01	; 1
  f2:	50 e0       	ldi	r21, 0x00	; 0
  f4:	4c 0f       	add	r20, r28
  f6:	5d 1f       	adc	r21, r29
  f8:	e4 0f       	add	r30, r20
  fa:	f5 1f       	adc	r31, r21
  fc:	80 83       	st	Z, r24
  fe:	2f 5f       	subi	r18, 0xFF	; 255
 100:	01 c0       	rjmp	.+2      	; 0x104 <getkey+0x98>
 102:	24 e0       	ldi	r18, 0x04	; 4
 104:	28 30       	cpi	r18, 0x08	; 8
 106:	40 f2       	brcs	.-112    	; 0x98 <getkey+0x2c>
 108:	90 e0       	ldi	r25, 0x00	; 0
 10a:	20 e0       	ldi	r18, 0x00	; 0
 10c:	80 e0       	ldi	r24, 0x00	; 0
 10e:	21 c0       	rjmp	.+66     	; 0x152 <getkey+0xe6>
 110:	21 30       	cpi	r18, 0x01	; 1
 112:	49 f4       	brne	.+18     	; 0x126 <getkey+0xba>
 114:	e1 e0       	ldi	r30, 0x01	; 1
 116:	f0 e0       	ldi	r31, 0x00	; 0
 118:	ec 0f       	add	r30, r28
 11a:	fd 1f       	adc	r31, r29
 11c:	e9 0f       	add	r30, r25
 11e:	f1 1d       	adc	r31, r1
 120:	30 81       	ld	r19, Z
 122:	31 11       	cpse	r19, r1
 124:	8f ef       	ldi	r24, 0xFF	; 255
 126:	21 11       	cpse	r18, r1
 128:	13 c0       	rjmp	.+38     	; 0x150 <getkey+0xe4>
 12a:	e1 e0       	ldi	r30, 0x01	; 1
 12c:	f0 e0       	ldi	r31, 0x00	; 0
 12e:	ec 0f       	add	r30, r28
 130:	fd 1f       	adc	r31, r29
 132:	e9 0f       	add	r30, r25
 134:	f1 1d       	adc	r31, r1
 136:	30 81       	ld	r19, Z
 138:	33 23       	and	r19, r19
 13a:	51 f0       	breq	.+20     	; 0x150 <getkey+0xe4>
 13c:	35 30       	cpi	r19, 0x05	; 5
 13e:	31 f0       	breq	.+12     	; 0x14c <getkey+0xe0>
 140:	89 2f       	mov	r24, r25
 142:	88 0f       	add	r24, r24
 144:	88 0f       	add	r24, r24
 146:	83 0f       	add	r24, r19
 148:	21 e0       	ldi	r18, 0x01	; 1
 14a:	02 c0       	rjmp	.+4      	; 0x150 <getkey+0xe4>
 14c:	21 e0       	ldi	r18, 0x01	; 1
 14e:	8f ef       	ldi	r24, 0xFF	; 255
 150:	9f 5f       	subi	r25, 0xFF	; 255
 152:	94 30       	cpi	r25, 0x04	; 4
 154:	e8 f2       	brcs	.-70     	; 0x110 <getkey+0xa4>
 156:	0f 90       	pop	r0
 158:	0f 90       	pop	r0
 15a:	0f 90       	pop	r0
 15c:	0f 90       	pop	r0
 15e:	df 91       	pop	r29
 160:	cf 91       	pop	r28
 162:	08 95       	ret

00000164 <cala_klawiatura>:
 164:	8f ef       	ldi	r24, 0xFF	; 255
 166:	87 bb       	out	0x17, r24	; 23
 168:	80 ef       	ldi	r24, 0xF0	; 240
 16a:	8a bb       	out	0x1a, r24	; 26
 16c:	8f e0       	ldi	r24, 0x0F	; 15
 16e:	8b bb       	out	0x1b, r24	; 27
 170:	0e 94 36 00 	call	0x6c	; 0x6c <getkey>
 174:	88 bb       	out	0x18, r24	; 24
 176:	87 e8       	ldi	r24, 0x87	; 135
 178:	93 e1       	ldi	r25, 0x13	; 19
 17a:	01 97       	sbiw	r24, 0x01	; 1
 17c:	f1 f7       	brne	.-4      	; 0x17a <cala_klawiatura+0x16>
 17e:	00 c0       	rjmp	.+0      	; 0x180 <cala_klawiatura+0x1c>
 180:	00 00       	nop
 182:	f6 cf       	rjmp	.-20     	; 0x170 <cala_klawiatura+0xc>

00000184 <main>:
int main(void)
{
	while (1)
	{
		//klawiatura_rzend();
		cala_klawiatura();
 184:	0e 94 b2 00 	call	0x164	; 0x164 <cala_klawiatura>

00000188 <_exit>:
 188:	f8 94       	cli

0000018a <__stop_program>:
 18a:	ff cf       	rjmp	.-2      	; 0x18a <__stop_program>
