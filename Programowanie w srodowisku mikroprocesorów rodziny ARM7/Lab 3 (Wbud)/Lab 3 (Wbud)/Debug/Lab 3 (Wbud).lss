
Lab 3 (Wbud).elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000061a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000006  00800060  0000061a  000006ae  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000e  00800066  00800066  000006b4  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000006b4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000006e4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000c8  00000000  00000000  00000720  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001100  00000000  00000000  000007e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009a9  00000000  00000000  000018e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000094e  00000000  00000000  00002291  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000188  00000000  00000000  00002be0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004bd  00000000  00000000  00002d68  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000866  00000000  00000000  00003225  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b0  00000000  00000000  00003a8b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ea e1       	ldi	r30, 0x1A	; 26
  68:	f6 e0       	ldi	r31, 0x06	; 6
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a6 36       	cpi	r26, 0x66	; 102
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a6 e6       	ldi	r26, 0x66	; 102
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a4 37       	cpi	r26, 0x74	; 116
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 df 01 	call	0x3be	; 0x3be <main>
  8a:	0c 94 0b 03 	jmp	0x616	; 0x616 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <selectPort>:
			}
		}
		return output;
	}
	return 0x00;
}
  92:	82 34       	cpi	r24, 0x42	; 66
  94:	e1 f0       	breq	.+56     	; 0xce <selectPort+0x3c>
  96:	18 f4       	brcc	.+6      	; 0x9e <selectPort+0xc>
  98:	81 34       	cpi	r24, 0x41	; 65
  9a:	31 f0       	breq	.+12     	; 0xa8 <selectPort+0x16>
  9c:	08 95       	ret
  9e:	83 34       	cpi	r24, 0x43	; 67
  a0:	49 f1       	breq	.+82     	; 0xf4 <selectPort+0x62>
  a2:	84 34       	cpi	r24, 0x44	; 68
  a4:	d1 f1       	breq	.+116    	; 0x11a <selectPort+0x88>
  a6:	08 95       	ret
  a8:	8b e3       	ldi	r24, 0x3B	; 59
  aa:	90 e0       	ldi	r25, 0x00	; 0
  ac:	90 93 67 00 	sts	0x0067, r25	; 0x800067 <__data_end+0x1>
  b0:	80 93 66 00 	sts	0x0066, r24	; 0x800066 <__data_end>
  b4:	8a e3       	ldi	r24, 0x3A	; 58
  b6:	90 e0       	ldi	r25, 0x00	; 0
  b8:	90 93 69 00 	sts	0x0069, r25	; 0x800069 <_DDR+0x1>
  bc:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <_DDR>
  c0:	89 e3       	ldi	r24, 0x39	; 57
  c2:	90 e0       	ldi	r25, 0x00	; 0
  c4:	90 93 6b 00 	sts	0x006B, r25	; 0x80006b <_PIN+0x1>
  c8:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <_PIN>
  cc:	08 95       	ret
  ce:	88 e3       	ldi	r24, 0x38	; 56
  d0:	90 e0       	ldi	r25, 0x00	; 0
  d2:	90 93 67 00 	sts	0x0067, r25	; 0x800067 <__data_end+0x1>
  d6:	80 93 66 00 	sts	0x0066, r24	; 0x800066 <__data_end>
  da:	87 e3       	ldi	r24, 0x37	; 55
  dc:	90 e0       	ldi	r25, 0x00	; 0
  de:	90 93 69 00 	sts	0x0069, r25	; 0x800069 <_DDR+0x1>
  e2:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <_DDR>
  e6:	86 e3       	ldi	r24, 0x36	; 54
  e8:	90 e0       	ldi	r25, 0x00	; 0
  ea:	90 93 6b 00 	sts	0x006B, r25	; 0x80006b <_PIN+0x1>
  ee:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <_PIN>
  f2:	08 95       	ret
  f4:	85 e3       	ldi	r24, 0x35	; 53
  f6:	90 e0       	ldi	r25, 0x00	; 0
  f8:	90 93 67 00 	sts	0x0067, r25	; 0x800067 <__data_end+0x1>
  fc:	80 93 66 00 	sts	0x0066, r24	; 0x800066 <__data_end>
 100:	84 e3       	ldi	r24, 0x34	; 52
 102:	90 e0       	ldi	r25, 0x00	; 0
 104:	90 93 69 00 	sts	0x0069, r25	; 0x800069 <_DDR+0x1>
 108:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <_DDR>
 10c:	83 e3       	ldi	r24, 0x33	; 51
 10e:	90 e0       	ldi	r25, 0x00	; 0
 110:	90 93 6b 00 	sts	0x006B, r25	; 0x80006b <_PIN+0x1>
 114:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <_PIN>
 118:	08 95       	ret
 11a:	82 e3       	ldi	r24, 0x32	; 50
 11c:	90 e0       	ldi	r25, 0x00	; 0
 11e:	90 93 67 00 	sts	0x0067, r25	; 0x800067 <__data_end+0x1>
 122:	80 93 66 00 	sts	0x0066, r24	; 0x800066 <__data_end>
 126:	81 e3       	ldi	r24, 0x31	; 49
 128:	90 e0       	ldi	r25, 0x00	; 0
 12a:	90 93 69 00 	sts	0x0069, r25	; 0x800069 <_DDR+0x1>
 12e:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <_DDR>
 132:	80 e3       	ldi	r24, 0x30	; 48
 134:	90 e0       	ldi	r25, 0x00	; 0
 136:	90 93 6b 00 	sts	0x006B, r25	; 0x80006b <_PIN+0x1>
 13a:	80 93 6a 00 	sts	0x006A, r24	; 0x80006a <_PIN>
 13e:	08 95       	ret

00000140 <Keyboard_init>:

void Keyboard_init(char port)
{
	if (port != 'A' && port != 'B' && port != 'C' && port != 'D')
 140:	9f eb       	ldi	r25, 0xBF	; 191
 142:	98 0f       	add	r25, r24
 144:	94 30       	cpi	r25, 0x04	; 4
 146:	70 f4       	brcc	.+28     	; 0x164 <Keyboard_init+0x24>
	{
		return;
	}
	selectPort(port);
 148:	0e 94 49 00 	call	0x92	; 0x92 <selectPort>
	*_DDR = 0xf0;
 14c:	e0 91 68 00 	lds	r30, 0x0068	; 0x800068 <_DDR>
 150:	f0 91 69 00 	lds	r31, 0x0069	; 0x800069 <_DDR+0x1>
 154:	80 ef       	ldi	r24, 0xF0	; 240
 156:	80 83       	st	Z, r24
	*_PORT = 0x0f;
 158:	e0 91 66 00 	lds	r30, 0x0066	; 0x800066 <__data_end>
 15c:	f0 91 67 00 	lds	r31, 0x0067	; 0x800067 <__data_end+0x1>
 160:	8f e0       	ldi	r24, 0x0F	; 15
 162:	80 83       	st	Z, r24
 164:	08 95       	ret

00000166 <LCD_input>:
    {
        LCD_printSymbol(str[i]);
        _delay_ms(2);
        i++;
    }
}
 166:	e0 91 6e 00 	lds	r30, 0x006E	; 0x80006e <port>
 16a:	f0 91 6f 00 	lds	r31, 0x006F	; 0x80006f <port+0x1>
 16e:	90 81       	ld	r25, Z
 170:	98 60       	ori	r25, 0x08	; 8
 172:	90 83       	st	Z, r25
 174:	e0 91 6e 00 	lds	r30, 0x006E	; 0x80006e <port>
 178:	f0 91 6f 00 	lds	r31, 0x006F	; 0x80006f <port+0x1>
 17c:	90 81       	ld	r25, Z
 17e:	28 2f       	mov	r18, r24
 180:	20 7f       	andi	r18, 0xF0	; 240
 182:	9f 70       	andi	r25, 0x0F	; 15
 184:	92 2b       	or	r25, r18
 186:	90 83       	st	Z, r25
 188:	e0 91 6e 00 	lds	r30, 0x006E	; 0x80006e <port>
 18c:	f0 91 6f 00 	lds	r31, 0x006F	; 0x80006f <port+0x1>
 190:	90 81       	ld	r25, Z
 192:	97 7f       	andi	r25, 0xF7	; 247
 194:	90 83       	st	Z, r25
 196:	00 00       	nop
 198:	e0 91 6e 00 	lds	r30, 0x006E	; 0x80006e <port>
 19c:	f0 91 6f 00 	lds	r31, 0x006F	; 0x80006f <port+0x1>
 1a0:	90 81       	ld	r25, Z
 1a2:	98 60       	ori	r25, 0x08	; 8
 1a4:	90 83       	st	Z, r25
 1a6:	20 e1       	ldi	r18, 0x10	; 16
 1a8:	82 9f       	mul	r24, r18
 1aa:	c0 01       	movw	r24, r0
 1ac:	11 24       	eor	r1, r1
 1ae:	e0 91 6e 00 	lds	r30, 0x006E	; 0x80006e <port>
 1b2:	f0 91 6f 00 	lds	r31, 0x006F	; 0x80006f <port+0x1>
 1b6:	90 81       	ld	r25, Z
 1b8:	9f 70       	andi	r25, 0x0F	; 15
 1ba:	89 2b       	or	r24, r25
 1bc:	80 83       	st	Z, r24
 1be:	e0 91 6e 00 	lds	r30, 0x006E	; 0x80006e <port>
 1c2:	f0 91 6f 00 	lds	r31, 0x006F	; 0x80006f <port+0x1>
 1c6:	80 81       	ld	r24, Z
 1c8:	87 7f       	andi	r24, 0xF7	; 247
 1ca:	80 83       	st	Z, r24
 1cc:	89 ef       	ldi	r24, 0xF9	; 249
 1ce:	90 e0       	ldi	r25, 0x00	; 0
 1d0:	01 97       	sbiw	r24, 0x01	; 1
 1d2:	f1 f7       	brne	.-4      	; 0x1d0 <LCD_input+0x6a>
 1d4:	00 c0       	rjmp	.+0      	; 0x1d6 <LCD_input+0x70>
 1d6:	00 00       	nop
 1d8:	08 95       	ret

000001da <LCD_clear>:
 1da:	e0 91 6e 00 	lds	r30, 0x006E	; 0x80006e <port>
 1de:	f0 91 6f 00 	lds	r31, 0x006F	; 0x80006f <port+0x1>
 1e2:	80 81       	ld	r24, Z
 1e4:	8b 7f       	andi	r24, 0xFB	; 251
 1e6:	80 83       	st	Z, r24
 1e8:	81 e0       	ldi	r24, 0x01	; 1
 1ea:	0e 94 b3 00 	call	0x166	; 0x166 <LCD_input>
 1ee:	83 ef       	ldi	r24, 0xF3	; 243
 1f0:	91 e0       	ldi	r25, 0x01	; 1
 1f2:	01 97       	sbiw	r24, 0x01	; 1
 1f4:	f1 f7       	brne	.-4      	; 0x1f2 <LCD_clear+0x18>
 1f6:	00 c0       	rjmp	.+0      	; 0x1f8 <LCD_clear+0x1e>
 1f8:	00 00       	nop
 1fa:	08 95       	ret

000001fc <LCD_set_cursor>:
 1fc:	70 e0       	ldi	r23, 0x00	; 0
 1fe:	61 50       	subi	r22, 0x01	; 1
 200:	71 09       	sbc	r23, r1
 202:	90 e4       	ldi	r25, 0x40	; 64
 204:	69 9f       	mul	r22, r25
 206:	80 0d       	add	r24, r0
 208:	11 24       	eor	r1, r1
 20a:	81 50       	subi	r24, 0x01	; 1
 20c:	e0 91 6e 00 	lds	r30, 0x006E	; 0x80006e <port>
 210:	f0 91 6f 00 	lds	r31, 0x006F	; 0x80006f <port+0x1>
 214:	90 81       	ld	r25, Z
 216:	9b 7f       	andi	r25, 0xFB	; 251
 218:	90 83       	st	Z, r25
 21a:	80 68       	ori	r24, 0x80	; 128
 21c:	0e 94 b3 00 	call	0x166	; 0x166 <LCD_input>
 220:	08 95       	ret

00000222 <LCD_createSymbol>:
 222:	0f 93       	push	r16
 224:	1f 93       	push	r17
 226:	cf 93       	push	r28
 228:	8b 01       	movw	r16, r22
 22a:	e0 91 6e 00 	lds	r30, 0x006E	; 0x80006e <port>
 22e:	f0 91 6f 00 	lds	r31, 0x006F	; 0x80006f <port+0x1>
 232:	90 81       	ld	r25, Z
 234:	9b 7f       	andi	r25, 0xFB	; 251
 236:	90 83       	st	Z, r25
 238:	88 0f       	add	r24, r24
 23a:	88 0f       	add	r24, r24
 23c:	88 0f       	add	r24, r24
 23e:	80 64       	ori	r24, 0x40	; 64
 240:	0e 94 b3 00 	call	0x166	; 0x166 <LCD_input>
 244:	e0 91 6e 00 	lds	r30, 0x006E	; 0x80006e <port>
 248:	f0 91 6f 00 	lds	r31, 0x006F	; 0x80006f <port+0x1>
 24c:	80 81       	ld	r24, Z
 24e:	84 60       	ori	r24, 0x04	; 4
 250:	80 83       	st	Z, r24
 252:	c0 e0       	ldi	r28, 0x00	; 0
 254:	07 c0       	rjmp	.+14     	; 0x264 <LCD_createSymbol+0x42>
 256:	f8 01       	movw	r30, r16
 258:	ec 0f       	add	r30, r28
 25a:	f1 1d       	adc	r31, r1
 25c:	80 81       	ld	r24, Z
 25e:	0e 94 b3 00 	call	0x166	; 0x166 <LCD_input>
 262:	cf 5f       	subi	r28, 0xFF	; 255
 264:	c8 30       	cpi	r28, 0x08	; 8
 266:	b8 f3       	brcs	.-18     	; 0x256 <LCD_createSymbol+0x34>
 268:	cf 91       	pop	r28
 26a:	1f 91       	pop	r17
 26c:	0f 91       	pop	r16
 26e:	08 95       	ret

00000270 <LCD_printSymbol>:
 270:	e0 91 6e 00 	lds	r30, 0x006E	; 0x80006e <port>
 274:	f0 91 6f 00 	lds	r31, 0x006F	; 0x80006f <port+0x1>
 278:	90 81       	ld	r25, Z
 27a:	94 60       	ori	r25, 0x04	; 4
 27c:	90 83       	st	Z, r25
 27e:	0e 94 b3 00 	call	0x166	; 0x166 <LCD_input>
 282:	08 95       	ret

00000284 <LCD_init>:
}

// Funkcja do inicjalizacji LCD
void LCD_init(char portChar)
{
    switch (portChar)
 284:	82 34       	cpi	r24, 0x42	; 66
 286:	b1 f0       	breq	.+44     	; 0x2b4 <LCD_init+0x30>
 288:	18 f4       	brcc	.+6      	; 0x290 <LCD_init+0xc>
 28a:	81 34       	cpi	r24, 0x41	; 65
 28c:	31 f0       	breq	.+12     	; 0x29a <LCD_init+0x16>
 28e:	08 95       	ret
 290:	83 34       	cpi	r24, 0x43	; 67
 292:	e9 f0       	breq	.+58     	; 0x2ce <LCD_init+0x4a>
 294:	84 34       	cpi	r24, 0x44	; 68
 296:	41 f1       	breq	.+80     	; 0x2e8 <LCD_init+0x64>
 298:	08 95       	ret
    {
    case 'A':
        port = &PORTA;
 29a:	8b e3       	ldi	r24, 0x3B	; 59
 29c:	90 e0       	ldi	r25, 0x00	; 0
 29e:	90 93 6f 00 	sts	0x006F, r25	; 0x80006f <port+0x1>
 2a2:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <port>
        ddr = &DDRA;
 2a6:	8a e3       	ldi	r24, 0x3A	; 58
 2a8:	90 e0       	ldi	r25, 0x00	; 0
 2aa:	90 93 6d 00 	sts	0x006D, r25	; 0x80006d <ddr+0x1>
 2ae:	80 93 6c 00 	sts	0x006C, r24	; 0x80006c <ddr>
        break;
 2b2:	26 c0       	rjmp	.+76     	; 0x300 <LCD_init+0x7c>
    case 'B':
        port = &PORTB;
 2b4:	88 e3       	ldi	r24, 0x38	; 56
 2b6:	90 e0       	ldi	r25, 0x00	; 0
 2b8:	90 93 6f 00 	sts	0x006F, r25	; 0x80006f <port+0x1>
 2bc:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <port>
        ddr = &DDRB;
 2c0:	87 e3       	ldi	r24, 0x37	; 55
 2c2:	90 e0       	ldi	r25, 0x00	; 0
 2c4:	90 93 6d 00 	sts	0x006D, r25	; 0x80006d <ddr+0x1>
 2c8:	80 93 6c 00 	sts	0x006C, r24	; 0x80006c <ddr>
        break;
 2cc:	19 c0       	rjmp	.+50     	; 0x300 <LCD_init+0x7c>
    case 'C':
        port = &PORTC;
 2ce:	85 e3       	ldi	r24, 0x35	; 53
 2d0:	90 e0       	ldi	r25, 0x00	; 0
 2d2:	90 93 6f 00 	sts	0x006F, r25	; 0x80006f <port+0x1>
 2d6:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <port>
        ddr = &DDRC;
 2da:	84 e3       	ldi	r24, 0x34	; 52
 2dc:	90 e0       	ldi	r25, 0x00	; 0
 2de:	90 93 6d 00 	sts	0x006D, r25	; 0x80006d <ddr+0x1>
 2e2:	80 93 6c 00 	sts	0x006C, r24	; 0x80006c <ddr>
        break;
 2e6:	0c c0       	rjmp	.+24     	; 0x300 <LCD_init+0x7c>
    case 'D':
        port = &PORTD;
 2e8:	82 e3       	ldi	r24, 0x32	; 50
 2ea:	90 e0       	ldi	r25, 0x00	; 0
 2ec:	90 93 6f 00 	sts	0x006F, r25	; 0x80006f <port+0x1>
 2f0:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <port>
        ddr = &DDRD;
 2f4:	81 e3       	ldi	r24, 0x31	; 49
 2f6:	90 e0       	ldi	r25, 0x00	; 0
 2f8:	90 93 6d 00 	sts	0x006D, r25	; 0x80006d <ddr+0x1>
 2fc:	80 93 6c 00 	sts	0x006C, r24	; 0x80006c <ddr>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 300:	87 e8       	ldi	r24, 0x87	; 135
 302:	93 e1       	ldi	r25, 0x13	; 19
 304:	01 97       	sbiw	r24, 0x01	; 1
 306:	f1 f7       	brne	.-4      	; 0x304 <LCD_init+0x80>
 308:	00 c0       	rjmp	.+0      	; 0x30a <LCD_init+0x86>
 30a:	00 00       	nop
    default:
        return;
    }

    _delay_ms(20);
    *ddr = 0xff;
 30c:	e0 91 6c 00 	lds	r30, 0x006C	; 0x80006c <ddr>
 310:	f0 91 6d 00 	lds	r31, 0x006D	; 0x80006d <ddr+0x1>
 314:	8f ef       	ldi	r24, 0xFF	; 255
 316:	80 83       	st	Z, r24
    *port = 0;
 318:	e0 91 6e 00 	lds	r30, 0x006E	; 0x80006e <port>
 31c:	f0 91 6f 00 	lds	r31, 0x006F	; 0x80006f <port+0x1>
 320:	10 82       	st	Z, r1

    *port &= ~(_BV(LCD_RS));
 322:	e0 91 6e 00 	lds	r30, 0x006E	; 0x80006e <port>
 326:	f0 91 6f 00 	lds	r31, 0x006F	; 0x80006f <port+0x1>
 32a:	80 81       	ld	r24, Z
 32c:	8b 7f       	andi	r24, 0xFB	; 251
 32e:	80 83       	st	Z, r24
    LCD_input(0b00101000);
 330:	88 e2       	ldi	r24, 0x28	; 40
 332:	0e 94 b3 00 	call	0x166	; 0x166 <LCD_input>
    LCD_input(0b00000110);
 336:	86 e0       	ldi	r24, 0x06	; 6
 338:	0e 94 b3 00 	call	0x166	; 0x166 <LCD_input>
    LCD_input(0b00001100);
 33c:	8c e0       	ldi	r24, 0x0C	; 12
 33e:	0e 94 b3 00 	call	0x166	; 0x166 <LCD_input>
    LCD_set_cursor(1, 1);
 342:	61 e0       	ldi	r22, 0x01	; 1
 344:	81 e0       	ldi	r24, 0x01	; 1
 346:	0e 94 fe 00 	call	0x1fc	; 0x1fc <LCD_set_cursor>
    *port |= _BV(LCD_RS);
 34a:	e0 91 6e 00 	lds	r30, 0x006E	; 0x80006e <port>
 34e:	f0 91 6f 00 	lds	r31, 0x006F	; 0x80006f <port+0x1>
 352:	80 81       	ld	r24, Z
 354:	84 60       	ori	r24, 0x04	; 4
 356:	80 83       	st	Z, r24
    LCD_clear();
 358:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_clear>
 35c:	83 ef       	ldi	r24, 0xF3	; 243
 35e:	91 e0       	ldi	r25, 0x01	; 1
 360:	01 97       	sbiw	r24, 0x01	; 1
 362:	f1 f7       	brne	.-4      	; 0x360 <LCD_init+0xdc>
 364:	00 c0       	rjmp	.+0      	; 0x366 <LCD_init+0xe2>
 366:	00 00       	nop
 368:	08 95       	ret

0000036a <character>:
 36a:	88 e0       	ldi	r24, 0x08	; 8
 36c:	90 e0       	ldi	r25, 0x00	; 0
 36e:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <malloc>
 372:	fc 01       	movw	r30, r24
 374:	82 e0       	ldi	r24, 0x02	; 2
 376:	80 83       	st	Z, r24
 378:	85 e0       	ldi	r24, 0x05	; 5
 37a:	81 83       	std	Z+1, r24	; 0x01
 37c:	84 e0       	ldi	r24, 0x04	; 4
 37e:	82 83       	std	Z+2, r24	; 0x02
 380:	83 83       	std	Z+3, r24	; 0x03
 382:	84 83       	std	Z+4, r24	; 0x04
 384:	85 83       	std	Z+5, r24	; 0x05
 386:	84 e1       	ldi	r24, 0x14	; 20
 388:	86 83       	std	Z+6, r24	; 0x06
 38a:	88 e0       	ldi	r24, 0x08	; 8
 38c:	87 83       	std	Z+7, r24	; 0x07
 38e:	cf 01       	movw	r24, r30
 390:	08 95       	ret

00000392 <Zadanie_2>:
        _delay_ms(100);
    }
}

void Zadanie_2(){
	LCD_createSymbol(0, character());
 392:	0e 94 b5 01 	call	0x36a	; 0x36a <character>
 396:	bc 01       	movw	r22, r24
 398:	80 e0       	ldi	r24, 0x00	; 0
 39a:	0e 94 11 01 	call	0x222	; 0x222 <LCD_createSymbol>
	while (1)
	{
		LCD_clear();
 39e:	0e 94 ed 00 	call	0x1da	; 0x1da <LCD_clear>
		LCD_set_cursor(1,1);
 3a2:	61 e0       	ldi	r22, 0x01	; 1
 3a4:	81 e0       	ldi	r24, 0x01	; 1
 3a6:	0e 94 fe 00 	call	0x1fc	; 0x1fc <LCD_set_cursor>
		LCD_printSymbol(0);
 3aa:	80 e0       	ldi	r24, 0x00	; 0
 3ac:	0e 94 38 01 	call	0x270	; 0x270 <LCD_printSymbol>
 3b0:	87 ea       	ldi	r24, 0xA7	; 167
 3b2:	91 e6       	ldi	r25, 0x61	; 97
 3b4:	01 97       	sbiw	r24, 0x01	; 1
 3b6:	f1 f7       	brne	.-4      	; 0x3b4 <Zadanie_2+0x22>
 3b8:	00 c0       	rjmp	.+0      	; 0x3ba <Zadanie_2+0x28>
 3ba:	00 00       	nop
 3bc:	f0 cf       	rjmp	.-32     	; 0x39e <Zadanie_2+0xc>

000003be <main>:
	}
}

int main(void)
{
    LCD_init('A');
 3be:	81 e4       	ldi	r24, 0x41	; 65
 3c0:	0e 94 42 01 	call	0x284	; 0x284 <LCD_init>
    Keyboard_init('D');
 3c4:	84 e4       	ldi	r24, 0x44	; 68
 3c6:	90 e0       	ldi	r25, 0x00	; 0
 3c8:	0e 94 a0 00 	call	0x140	; 0x140 <Keyboard_init>
	DDRA = 0xff;
 3cc:	8f ef       	ldi	r24, 0xFF	; 255
 3ce:	8a bb       	out	0x1a, r24	; 26

    while (1)
    {
		
		Zadanie_2();
 3d0:	0e 94 c9 01 	call	0x392	; 0x392 <Zadanie_2>

000003d4 <malloc>:
 3d4:	0f 93       	push	r16
 3d6:	1f 93       	push	r17
 3d8:	cf 93       	push	r28
 3da:	df 93       	push	r29
 3dc:	82 30       	cpi	r24, 0x02	; 2
 3de:	91 05       	cpc	r25, r1
 3e0:	10 f4       	brcc	.+4      	; 0x3e6 <malloc+0x12>
 3e2:	82 e0       	ldi	r24, 0x02	; 2
 3e4:	90 e0       	ldi	r25, 0x00	; 0
 3e6:	e0 91 72 00 	lds	r30, 0x0072	; 0x800072 <__flp>
 3ea:	f0 91 73 00 	lds	r31, 0x0073	; 0x800073 <__flp+0x1>
 3ee:	20 e0       	ldi	r18, 0x00	; 0
 3f0:	30 e0       	ldi	r19, 0x00	; 0
 3f2:	a0 e0       	ldi	r26, 0x00	; 0
 3f4:	b0 e0       	ldi	r27, 0x00	; 0
 3f6:	30 97       	sbiw	r30, 0x00	; 0
 3f8:	19 f1       	breq	.+70     	; 0x440 <__EEPROM_REGION_LENGTH__+0x40>
 3fa:	40 81       	ld	r20, Z
 3fc:	51 81       	ldd	r21, Z+1	; 0x01
 3fe:	02 81       	ldd	r16, Z+2	; 0x02
 400:	13 81       	ldd	r17, Z+3	; 0x03
 402:	48 17       	cp	r20, r24
 404:	59 07       	cpc	r21, r25
 406:	c8 f0       	brcs	.+50     	; 0x43a <__EEPROM_REGION_LENGTH__+0x3a>
 408:	84 17       	cp	r24, r20
 40a:	95 07       	cpc	r25, r21
 40c:	69 f4       	brne	.+26     	; 0x428 <__EEPROM_REGION_LENGTH__+0x28>
 40e:	10 97       	sbiw	r26, 0x00	; 0
 410:	31 f0       	breq	.+12     	; 0x41e <__EEPROM_REGION_LENGTH__+0x1e>
 412:	12 96       	adiw	r26, 0x02	; 2
 414:	0c 93       	st	X, r16
 416:	12 97       	sbiw	r26, 0x02	; 2
 418:	13 96       	adiw	r26, 0x03	; 3
 41a:	1c 93       	st	X, r17
 41c:	27 c0       	rjmp	.+78     	; 0x46c <__EEPROM_REGION_LENGTH__+0x6c>
 41e:	00 93 72 00 	sts	0x0072, r16	; 0x800072 <__flp>
 422:	10 93 73 00 	sts	0x0073, r17	; 0x800073 <__flp+0x1>
 426:	22 c0       	rjmp	.+68     	; 0x46c <__EEPROM_REGION_LENGTH__+0x6c>
 428:	21 15       	cp	r18, r1
 42a:	31 05       	cpc	r19, r1
 42c:	19 f0       	breq	.+6      	; 0x434 <__EEPROM_REGION_LENGTH__+0x34>
 42e:	42 17       	cp	r20, r18
 430:	53 07       	cpc	r21, r19
 432:	18 f4       	brcc	.+6      	; 0x43a <__EEPROM_REGION_LENGTH__+0x3a>
 434:	9a 01       	movw	r18, r20
 436:	bd 01       	movw	r22, r26
 438:	ef 01       	movw	r28, r30
 43a:	df 01       	movw	r26, r30
 43c:	f8 01       	movw	r30, r16
 43e:	db cf       	rjmp	.-74     	; 0x3f6 <malloc+0x22>
 440:	21 15       	cp	r18, r1
 442:	31 05       	cpc	r19, r1
 444:	f9 f0       	breq	.+62     	; 0x484 <__EEPROM_REGION_LENGTH__+0x84>
 446:	28 1b       	sub	r18, r24
 448:	39 0b       	sbc	r19, r25
 44a:	24 30       	cpi	r18, 0x04	; 4
 44c:	31 05       	cpc	r19, r1
 44e:	80 f4       	brcc	.+32     	; 0x470 <__EEPROM_REGION_LENGTH__+0x70>
 450:	8a 81       	ldd	r24, Y+2	; 0x02
 452:	9b 81       	ldd	r25, Y+3	; 0x03
 454:	61 15       	cp	r22, r1
 456:	71 05       	cpc	r23, r1
 458:	21 f0       	breq	.+8      	; 0x462 <__EEPROM_REGION_LENGTH__+0x62>
 45a:	fb 01       	movw	r30, r22
 45c:	93 83       	std	Z+3, r25	; 0x03
 45e:	82 83       	std	Z+2, r24	; 0x02
 460:	04 c0       	rjmp	.+8      	; 0x46a <__EEPROM_REGION_LENGTH__+0x6a>
 462:	90 93 73 00 	sts	0x0073, r25	; 0x800073 <__flp+0x1>
 466:	80 93 72 00 	sts	0x0072, r24	; 0x800072 <__flp>
 46a:	fe 01       	movw	r30, r28
 46c:	32 96       	adiw	r30, 0x02	; 2
 46e:	44 c0       	rjmp	.+136    	; 0x4f8 <__EEPROM_REGION_LENGTH__+0xf8>
 470:	fe 01       	movw	r30, r28
 472:	e2 0f       	add	r30, r18
 474:	f3 1f       	adc	r31, r19
 476:	81 93       	st	Z+, r24
 478:	91 93       	st	Z+, r25
 47a:	22 50       	subi	r18, 0x02	; 2
 47c:	31 09       	sbc	r19, r1
 47e:	39 83       	std	Y+1, r19	; 0x01
 480:	28 83       	st	Y, r18
 482:	3a c0       	rjmp	.+116    	; 0x4f8 <__EEPROM_REGION_LENGTH__+0xf8>
 484:	20 91 70 00 	lds	r18, 0x0070	; 0x800070 <__brkval>
 488:	30 91 71 00 	lds	r19, 0x0071	; 0x800071 <__brkval+0x1>
 48c:	23 2b       	or	r18, r19
 48e:	41 f4       	brne	.+16     	; 0x4a0 <__EEPROM_REGION_LENGTH__+0xa0>
 490:	20 91 62 00 	lds	r18, 0x0062	; 0x800062 <__malloc_heap_start>
 494:	30 91 63 00 	lds	r19, 0x0063	; 0x800063 <__malloc_heap_start+0x1>
 498:	30 93 71 00 	sts	0x0071, r19	; 0x800071 <__brkval+0x1>
 49c:	20 93 70 00 	sts	0x0070, r18	; 0x800070 <__brkval>
 4a0:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <__data_start>
 4a4:	30 91 61 00 	lds	r19, 0x0061	; 0x800061 <__data_start+0x1>
 4a8:	21 15       	cp	r18, r1
 4aa:	31 05       	cpc	r19, r1
 4ac:	41 f4       	brne	.+16     	; 0x4be <__EEPROM_REGION_LENGTH__+0xbe>
 4ae:	2d b7       	in	r18, 0x3d	; 61
 4b0:	3e b7       	in	r19, 0x3e	; 62
 4b2:	40 91 64 00 	lds	r20, 0x0064	; 0x800064 <__malloc_margin>
 4b6:	50 91 65 00 	lds	r21, 0x0065	; 0x800065 <__malloc_margin+0x1>
 4ba:	24 1b       	sub	r18, r20
 4bc:	35 0b       	sbc	r19, r21
 4be:	e0 91 70 00 	lds	r30, 0x0070	; 0x800070 <__brkval>
 4c2:	f0 91 71 00 	lds	r31, 0x0071	; 0x800071 <__brkval+0x1>
 4c6:	e2 17       	cp	r30, r18
 4c8:	f3 07       	cpc	r31, r19
 4ca:	a0 f4       	brcc	.+40     	; 0x4f4 <__EEPROM_REGION_LENGTH__+0xf4>
 4cc:	2e 1b       	sub	r18, r30
 4ce:	3f 0b       	sbc	r19, r31
 4d0:	28 17       	cp	r18, r24
 4d2:	39 07       	cpc	r19, r25
 4d4:	78 f0       	brcs	.+30     	; 0x4f4 <__EEPROM_REGION_LENGTH__+0xf4>
 4d6:	ac 01       	movw	r20, r24
 4d8:	4e 5f       	subi	r20, 0xFE	; 254
 4da:	5f 4f       	sbci	r21, 0xFF	; 255
 4dc:	24 17       	cp	r18, r20
 4de:	35 07       	cpc	r19, r21
 4e0:	48 f0       	brcs	.+18     	; 0x4f4 <__EEPROM_REGION_LENGTH__+0xf4>
 4e2:	4e 0f       	add	r20, r30
 4e4:	5f 1f       	adc	r21, r31
 4e6:	50 93 71 00 	sts	0x0071, r21	; 0x800071 <__brkval+0x1>
 4ea:	40 93 70 00 	sts	0x0070, r20	; 0x800070 <__brkval>
 4ee:	81 93       	st	Z+, r24
 4f0:	91 93       	st	Z+, r25
 4f2:	02 c0       	rjmp	.+4      	; 0x4f8 <__EEPROM_REGION_LENGTH__+0xf8>
 4f4:	e0 e0       	ldi	r30, 0x00	; 0
 4f6:	f0 e0       	ldi	r31, 0x00	; 0
 4f8:	cf 01       	movw	r24, r30
 4fa:	df 91       	pop	r29
 4fc:	cf 91       	pop	r28
 4fe:	1f 91       	pop	r17
 500:	0f 91       	pop	r16
 502:	08 95       	ret

00000504 <free>:
 504:	cf 93       	push	r28
 506:	df 93       	push	r29
 508:	00 97       	sbiw	r24, 0x00	; 0
 50a:	09 f4       	brne	.+2      	; 0x50e <free+0xa>
 50c:	81 c0       	rjmp	.+258    	; 0x610 <free+0x10c>
 50e:	fc 01       	movw	r30, r24
 510:	32 97       	sbiw	r30, 0x02	; 2
 512:	13 82       	std	Z+3, r1	; 0x03
 514:	12 82       	std	Z+2, r1	; 0x02
 516:	a0 91 72 00 	lds	r26, 0x0072	; 0x800072 <__flp>
 51a:	b0 91 73 00 	lds	r27, 0x0073	; 0x800073 <__flp+0x1>
 51e:	10 97       	sbiw	r26, 0x00	; 0
 520:	81 f4       	brne	.+32     	; 0x542 <free+0x3e>
 522:	20 81       	ld	r18, Z
 524:	31 81       	ldd	r19, Z+1	; 0x01
 526:	82 0f       	add	r24, r18
 528:	93 1f       	adc	r25, r19
 52a:	20 91 70 00 	lds	r18, 0x0070	; 0x800070 <__brkval>
 52e:	30 91 71 00 	lds	r19, 0x0071	; 0x800071 <__brkval+0x1>
 532:	28 17       	cp	r18, r24
 534:	39 07       	cpc	r19, r25
 536:	51 f5       	brne	.+84     	; 0x58c <free+0x88>
 538:	f0 93 71 00 	sts	0x0071, r31	; 0x800071 <__brkval+0x1>
 53c:	e0 93 70 00 	sts	0x0070, r30	; 0x800070 <__brkval>
 540:	67 c0       	rjmp	.+206    	; 0x610 <free+0x10c>
 542:	ed 01       	movw	r28, r26
 544:	20 e0       	ldi	r18, 0x00	; 0
 546:	30 e0       	ldi	r19, 0x00	; 0
 548:	ce 17       	cp	r28, r30
 54a:	df 07       	cpc	r29, r31
 54c:	40 f4       	brcc	.+16     	; 0x55e <free+0x5a>
 54e:	4a 81       	ldd	r20, Y+2	; 0x02
 550:	5b 81       	ldd	r21, Y+3	; 0x03
 552:	9e 01       	movw	r18, r28
 554:	41 15       	cp	r20, r1
 556:	51 05       	cpc	r21, r1
 558:	f1 f0       	breq	.+60     	; 0x596 <free+0x92>
 55a:	ea 01       	movw	r28, r20
 55c:	f5 cf       	rjmp	.-22     	; 0x548 <free+0x44>
 55e:	d3 83       	std	Z+3, r29	; 0x03
 560:	c2 83       	std	Z+2, r28	; 0x02
 562:	40 81       	ld	r20, Z
 564:	51 81       	ldd	r21, Z+1	; 0x01
 566:	84 0f       	add	r24, r20
 568:	95 1f       	adc	r25, r21
 56a:	c8 17       	cp	r28, r24
 56c:	d9 07       	cpc	r29, r25
 56e:	59 f4       	brne	.+22     	; 0x586 <free+0x82>
 570:	88 81       	ld	r24, Y
 572:	99 81       	ldd	r25, Y+1	; 0x01
 574:	84 0f       	add	r24, r20
 576:	95 1f       	adc	r25, r21
 578:	02 96       	adiw	r24, 0x02	; 2
 57a:	91 83       	std	Z+1, r25	; 0x01
 57c:	80 83       	st	Z, r24
 57e:	8a 81       	ldd	r24, Y+2	; 0x02
 580:	9b 81       	ldd	r25, Y+3	; 0x03
 582:	93 83       	std	Z+3, r25	; 0x03
 584:	82 83       	std	Z+2, r24	; 0x02
 586:	21 15       	cp	r18, r1
 588:	31 05       	cpc	r19, r1
 58a:	29 f4       	brne	.+10     	; 0x596 <free+0x92>
 58c:	f0 93 73 00 	sts	0x0073, r31	; 0x800073 <__flp+0x1>
 590:	e0 93 72 00 	sts	0x0072, r30	; 0x800072 <__flp>
 594:	3d c0       	rjmp	.+122    	; 0x610 <free+0x10c>
 596:	e9 01       	movw	r28, r18
 598:	fb 83       	std	Y+3, r31	; 0x03
 59a:	ea 83       	std	Y+2, r30	; 0x02
 59c:	49 91       	ld	r20, Y+
 59e:	59 91       	ld	r21, Y+
 5a0:	c4 0f       	add	r28, r20
 5a2:	d5 1f       	adc	r29, r21
 5a4:	ec 17       	cp	r30, r28
 5a6:	fd 07       	cpc	r31, r29
 5a8:	61 f4       	brne	.+24     	; 0x5c2 <free+0xbe>
 5aa:	80 81       	ld	r24, Z
 5ac:	91 81       	ldd	r25, Z+1	; 0x01
 5ae:	84 0f       	add	r24, r20
 5b0:	95 1f       	adc	r25, r21
 5b2:	02 96       	adiw	r24, 0x02	; 2
 5b4:	e9 01       	movw	r28, r18
 5b6:	99 83       	std	Y+1, r25	; 0x01
 5b8:	88 83       	st	Y, r24
 5ba:	82 81       	ldd	r24, Z+2	; 0x02
 5bc:	93 81       	ldd	r25, Z+3	; 0x03
 5be:	9b 83       	std	Y+3, r25	; 0x03
 5c0:	8a 83       	std	Y+2, r24	; 0x02
 5c2:	e0 e0       	ldi	r30, 0x00	; 0
 5c4:	f0 e0       	ldi	r31, 0x00	; 0
 5c6:	12 96       	adiw	r26, 0x02	; 2
 5c8:	8d 91       	ld	r24, X+
 5ca:	9c 91       	ld	r25, X
 5cc:	13 97       	sbiw	r26, 0x03	; 3
 5ce:	00 97       	sbiw	r24, 0x00	; 0
 5d0:	19 f0       	breq	.+6      	; 0x5d8 <free+0xd4>
 5d2:	fd 01       	movw	r30, r26
 5d4:	dc 01       	movw	r26, r24
 5d6:	f7 cf       	rjmp	.-18     	; 0x5c6 <free+0xc2>
 5d8:	8d 91       	ld	r24, X+
 5da:	9c 91       	ld	r25, X
 5dc:	11 97       	sbiw	r26, 0x01	; 1
 5de:	9d 01       	movw	r18, r26
 5e0:	2e 5f       	subi	r18, 0xFE	; 254
 5e2:	3f 4f       	sbci	r19, 0xFF	; 255
 5e4:	82 0f       	add	r24, r18
 5e6:	93 1f       	adc	r25, r19
 5e8:	20 91 70 00 	lds	r18, 0x0070	; 0x800070 <__brkval>
 5ec:	30 91 71 00 	lds	r19, 0x0071	; 0x800071 <__brkval+0x1>
 5f0:	28 17       	cp	r18, r24
 5f2:	39 07       	cpc	r19, r25
 5f4:	69 f4       	brne	.+26     	; 0x610 <free+0x10c>
 5f6:	30 97       	sbiw	r30, 0x00	; 0
 5f8:	29 f4       	brne	.+10     	; 0x604 <free+0x100>
 5fa:	10 92 73 00 	sts	0x0073, r1	; 0x800073 <__flp+0x1>
 5fe:	10 92 72 00 	sts	0x0072, r1	; 0x800072 <__flp>
 602:	02 c0       	rjmp	.+4      	; 0x608 <free+0x104>
 604:	13 82       	std	Z+3, r1	; 0x03
 606:	12 82       	std	Z+2, r1	; 0x02
 608:	b0 93 71 00 	sts	0x0071, r27	; 0x800071 <__brkval+0x1>
 60c:	a0 93 70 00 	sts	0x0070, r26	; 0x800070 <__brkval>
 610:	df 91       	pop	r29
 612:	cf 91       	pop	r28
 614:	08 95       	ret

00000616 <_exit>:
 616:	f8 94       	cli

00000618 <__stop_program>:
 618:	ff cf       	rjmp	.-2      	; 0x618 <__stop_program>
